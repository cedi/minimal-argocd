name: "Lint"

on:
  pull_request:

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: ibiqlik/action-yamllint@v3
        id: lint
        continue-on-error: true
        with:
          file_or_dir: .
          format: standard
          config_file: .yamllint.yml

      - name: single-line
        id: lint-output
        if: steps.lint.outcome != 'success'
        run: |
          echo "::set-output name=logfile::$(sed ':a;N;$!ba;s/\n/{newline}/g' < ${{ steps.lint.outputs.logfile }} )"

      - name: Augment PR with yamllint infos
        uses: actions/github-script@0.9.0
        if: steps.lint.outcome != 'success'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### yamllint: ðŸ“–\`${{ steps.kubeval.outcome }}\`
            <details><summary>Show results</summary>

            \`\`\`
            ${{ steps.lint-output.outputs.logfile }}
            \`\`\`

            </details>

            __Author:__ @${{ github.actor }},
            __Action:__ \`${{ github.event_name }}\``;

            new_output = output.replace(/{newline}/g, "\n");

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: new_output
            })

      - name: Fail pipeline if previously failed
        if: steps.lint.outcome != 'success'
        run: exit 1

  kubeval_manifests:
    name: "run kubeval on plain K8s manifests"
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: cedi-dev/gh-action-install-kubeval@main

      - name: Checkout
        uses: actions/checkout@v2

      - name: Kubeval
        id: kubeval
        continue-on-error: true
        run: |
          touch kubeval.txt
          for manifest in ./manifests/*/*.yaml
          do
            echo "$manifests"
            kubeval --ignore-missing-schemas --strict --schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/ $manifest | tee -a kubeval.txt
          done
          echo "::set-output name=kubeval::$(sed ':a;N;$!ba;s/\n/{newline}/g' < kubeval.txt)"

      - name: Augment PR with kubeval infos
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Kubeval manifests: ðŸ“–\`${{ steps.kubeval.outcome }}\`
            <details><summary>Show results</summary>

            \`\`\`
            ${{ steps.kubeval.outputs.kubeval }}
            \`\`\`

            </details>

            __Author:__ @${{ github.actor }},
            __Action:__ \`${{ github.event_name }}\``;

            new_output = output.replace(/{newline}/g, "\n");

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: new_output
            })

      - name: Fail pipeline if previously failed
        if: steps.kubeval.outcome != 'success'
        run: exit 1

  kubeval_charts:
    name: "run kubeval on charts"
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: cedi-dev/gh-action-install-kubeval@main

      - name: Checkout
        uses: actions/checkout@v2

      - name: Charts
        id: kubeval
        continue-on-error: true
        run: |
          touch kubeval.txt
          for chart in ./charts/*/
          do
            echo "$chart"
              for app in $stage*/
              do
                  echo "$chart"
                  helm template $chart --values $chart/values.yaml | kubeval --ignore-missing-schemas --strict | tee -a kubeval.txt
              done
          done
          echo "::set-output name=kubeval::$(sed ':a;N;$!ba;s/\n/{newline}/g' < kubeval.txt)"

      - name: Augment PR with kubeval infos
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Kubeval charts: ðŸ“–\`${{ steps.kubeval.outcome }}\`
            <details><summary>Show results</summary>

            \`\`\`
            ${{ steps.kubeval.outputs.kubeval }}
            \`\`\`

            </details>

            __Author:__ @${{ github.actor }},
            __Action:__ \`${{ github.event_name }}\``;

            new_output = output.replace(/{newline}/g, "\n");

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: new_output
            })

      - name: Fail pipeline if previously failed
        if: steps.kubeval.outcome != 'success'
        run: exit 1

  kubeval_kustomize:
    name: "run kubeval on Kustomize overlays"
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: cedi-dev/gh-action-install-kubeval@main

      - name: Checkout
        uses: actions/checkout@v2

      - name: Kustomize
        id: kubeval
        run: |
          touch kubeval.txt
          for kust in ./kustomize/overlays/*/
          do
            echo "$kust"
            kustomize build --enable-alpha-plugins --enable-helm $kust | kubeval --ignore-missing-schemas --strict | tee -a kubeval.txt
          done
          echo "::set-output name=kubeval::$(sed ':a;N;$!ba;s/\n/{newline}/g' < kubeval.txt)"

      - name: Augment PR with kubeval infos
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Kubeval kustomize: ðŸ“–\`${{ steps.kubeval.outcome }}\`
            <details><summary>Show results</summary>

            \`\`\`
            ${{ steps.kubeval.outputs.kubeval }}
            \`\`\`

            </details>

            __Author:__ @${{ github.actor }},
            __Action:__ \`${{ github.event_name }}\``;

            new_output = output.replace(/{newline}/g, "\n");

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: new_output
            })

      - name: Fail pipeline if previously failed
        if: steps.kubeval.outcome != 'success'
        run: exit 1
